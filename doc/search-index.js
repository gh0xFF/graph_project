var searchIndex = new Map(JSON.parse('[\
["lib",{"doc":"","t":"FFFNNNNNNNNNNNNNNOONNNNNNONNNNNNNNONNNNNNNNNNNOOO","n":["Edge","Graph","Vertex","add_edge","add_vertex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","breadth_first_traversal","clone","clone","clone_into","clone_into","deserialize_from_tgf","edges","end","fmt","fmt","fmt","from","from","from","id","into","into","into","new","parse_tgf","remove_edge","remove_vertex","serialize_to_tgf","start","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vertices"],"q":[[0,"lib"],[49,"alloc::vec"],[50,"core::clone"],[51,"core::error"],[52,"alloc::boxed"],[53,"core::result"],[54,"core::convert"],[55,"core::str::traits"],[56,"core::convert"],[57,"core::fmt"],[58,"std::io"],[59,"alloc::string"],[60,"core::ops::function"],[61,"core::any"]],"d":["Represents an edge between two vertices in the graph.","Represents a graph data structure.","Represents a vertex in the graph.","Adds a new edge between two vertices.","Adds a new vertex to the graph.","","","","","","","Performs a breadth-first traversal starting from the â€¦","","","","","Deserializes the graph from a file in the TGF format.","Collection of edges in the graph.","ID of the end vertex of the edge.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Unique identifier for the vertex.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new instance of the graph.","Parses the TGF format from a reader.","Removes an edge between two vertices.","Removes a vertex and all incident edges from the graph.","Serializes the graph to a file in the TGF format.","ID of the start vertex of the edge.","","","","","","","","","","","","Value associated with the vertex.","Value associated with the edge.","Collection of vertices in the graph."],"i":[0,0,0,1,1,4,7,1,4,7,1,1,4,7,4,7,1,1,7,4,7,1,4,7,1,4,4,7,1,1,1,1,1,1,7,4,7,4,7,1,4,7,1,4,7,1,4,7,1],"f":"```{{{b{c}}ddc}f{}}{{{b{c}}dc}f{}}{ce{}{}}00000{{{b{c}}d}{{j{{h{c}}}}}{}}{{{h{c}}}{{h{c}}}l}{{{n{c}}}{{n{c}}}l}{{ce}f{}{}}0{c{{Ad{{b{e}}{Ab{A`}}}}}{{Ah{Af}}}{Aj{Al{Af}}}}``{{{h{c}}An}B`Bb}{{{n{c}}An}B`Bb}{{{b{c}}An}B`Bb}{cc{}}00`999{{}{{b{c}}}{}}{c{{Ad{{Bf{{j{{Bd{{h{e}}}}}}{j{{n{e}}}}}}{Ab{A`}}}}}Bh{Aj{Al{Af}}}}{{{b{c}}dd}f{}}{{{b{c}}d}f{}}{{{b{c}}Afe}{{Ad{f{Ab{A`}}}}}{}{{Bn{c}{{Bj{Bl}}}}}}`>>{c{{Ad{e}}}{}{}}00000{cC`{}}00```","c":[],"p":[[5,"Graph",0],[1,"usize"],[1,"unit"],[5,"Vertex",0],[5,"Vec",49],[10,"Clone",50],[5,"Edge",0],[10,"Error",51],[5,"Box",52],[6,"Result",53],[1,"str"],[10,"AsRef",54],[10,"FromStr",55],[10,"From",54],[5,"Formatter",56],[8,"Result",56],[10,"Debug",56],[5,"Rc",57],[1,"tuple"],[10,"BufRead",58],[17,"Output"],[5,"String",59],[10,"Fn",60],[5,"TypeId",61]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
